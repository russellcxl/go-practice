// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.1
// source: ideas/ideas.protobuf

package ideas

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Idea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *User  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Idea) Reset() {
	*x = Idea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ideas_ideas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Idea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Idea) ProtoMessage() {}

func (x *Idea) ProtoReflect() protoreflect.Message {
	mi := &file_ideas_ideas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Idea.ProtoReflect.Descriptor instead.
func (*Idea) Descriptor() ([]byte, []int) {
	return file_ideas_ideas_proto_rawDescGZIP(), []int{0}
}

func (x *Idea) GetUserId() *User {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *Idea) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Idea) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ideas_ideas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ideas_ideas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ideas_ideas_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdeaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdeaResponse) Reset() {
	*x = IdeaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ideas_ideas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdeaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdeaResponse) ProtoMessage() {}

func (x *IdeaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ideas_ideas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdeaResponse.ProtoReflect.Descriptor instead.
func (*IdeaResponse) Descriptor() ([]byte, []int) {
	return file_ideas_ideas_proto_rawDescGZIP(), []int{2}
}

func (x *IdeaResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Ideas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ideas []*Idea `protobuf:"bytes,1,rep,name=ideas,proto3" json:"ideas,omitempty"`
}

func (x *Ideas) Reset() {
	*x = Ideas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ideas_ideas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ideas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ideas) ProtoMessage() {}

func (x *Ideas) ProtoReflect() protoreflect.Message {
	mi := &file_ideas_ideas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ideas.ProtoReflect.Descriptor instead.
func (*Ideas) Descriptor() ([]byte, []int) {
	return file_ideas_ideas_proto_rawDescGZIP(), []int{3}
}

func (x *Ideas) GetIdeas() []*Idea {
	if x != nil {
		return x.Ideas
	}
	return nil
}

var File_ideas_ideas_proto protoreflect.FileDescriptor

var file_ideas_ideas_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x64, 0x65, 0x61, 0x73, 0x2f, 0x69, 0x64, 0x65, 0x61, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x65, 0x0a, 0x04, 0x49,
	0x64, 0x65, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x49, 0x64,
	0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x05, 0x49, 0x64,
	0x65, 0x61, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x64, 0x65, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x64, 0x65, 0x61,
	0x52, 0x05, 0x69, 0x64, 0x65, 0x61, 0x73, 0x32, 0x68, 0x0a, 0x0b, 0x49, 0x64, 0x65, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x49, 0x64, 0x65, 0x61, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x64,
	0x65, 0x61, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x64, 0x65, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x61, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x64, 0x65, 0x61,
	0x73, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x69, 0x64, 0x65, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ideas_ideas_proto_rawDescOnce sync.Once
	file_ideas_ideas_proto_rawDescData = file_ideas_ideas_proto_rawDesc
)

func file_ideas_ideas_proto_rawDescGZIP() []byte {
	file_ideas_ideas_proto_rawDescOnce.Do(func() {
		file_ideas_ideas_proto_rawDescData = protoimpl.X.CompressGZIP(file_ideas_ideas_proto_rawDescData)
	})
	return file_ideas_ideas_proto_rawDescData
}

var file_ideas_ideas_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ideas_ideas_proto_goTypes = []interface{}{
	(*Idea)(nil),         // 0: protos.Idea
	(*User)(nil),         // 1: protos.User
	(*IdeaResponse)(nil), // 2: protos.IdeaResponse
	(*Ideas)(nil),        // 3: protos.Ideas
}
var file_ideas_ideas_proto_depIdxs = []int32{
	1, // 0: protos.Idea.user_id:type_name -> protos.User
	0, // 1: protos.Ideas.ideas:type_name -> protos.Idea
	0, // 2: protos.IdeaService.SubmitIdea:input_type -> protos.Idea
	1, // 3: protos.IdeaService.GetIdeas:input_type -> protos.User
	2, // 4: protos.IdeaService.SubmitIdea:output_type -> protos.IdeaResponse
	3, // 5: protos.IdeaService.GetIdeas:output_type -> protos.Ideas
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ideas_ideas_proto_init() }
func file_ideas_ideas_proto_init() {
	if File_ideas_ideas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ideas_ideas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Idea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ideas_ideas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ideas_ideas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdeaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ideas_ideas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ideas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ideas_ideas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ideas_ideas_proto_goTypes,
		DependencyIndexes: file_ideas_ideas_proto_depIdxs,
		MessageInfos:      file_ideas_ideas_proto_msgTypes,
	}.Build()
	File_ideas_ideas_proto = out.File
	file_ideas_ideas_proto_rawDesc = nil
	file_ideas_ideas_proto_goTypes = nil
	file_ideas_ideas_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IdeaServiceClient is the client API for IdeaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdeaServiceClient interface {
	SubmitIdea(ctx context.Context, in *Idea, opts ...grpc.CallOption) (*IdeaResponse, error)
	GetIdeas(ctx context.Context, in *User, opts ...grpc.CallOption) (*Ideas, error)
}

type ideaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIdeaServiceClient(cc grpc.ClientConnInterface) IdeaServiceClient {
	return &ideaServiceClient{cc}
}

func (c *ideaServiceClient) SubmitIdea(ctx context.Context, in *Idea, opts ...grpc.CallOption) (*IdeaResponse, error) {
	out := new(IdeaResponse)
	err := c.cc.Invoke(ctx, "/protos.IdeaService/SubmitIdea", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ideaServiceClient) GetIdeas(ctx context.Context, in *User, opts ...grpc.CallOption) (*Ideas, error) {
	out := new(Ideas)
	err := c.cc.Invoke(ctx, "/protos.IdeaService/GetIdeas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdeaServiceServer is the server API for IdeaService service.
type IdeaServiceServer interface {
	SubmitIdea(context.Context, *Idea) (*IdeaResponse, error)
	GetIdeas(context.Context, *User) (*Ideas, error)
}

// UnimplementedIdeaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIdeaServiceServer struct {
}

func (*UnimplementedIdeaServiceServer) SubmitIdea(context.Context, *Idea) (*IdeaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitIdea not implemented")
}
func (*UnimplementedIdeaServiceServer) GetIdeas(context.Context, *User) (*Ideas, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdeas not implemented")
}

func RegisterIdeaServiceServer(s *grpc.Server, srv IdeaServiceServer) {
	s.RegisterService(&_IdeaService_serviceDesc, srv)
}

func _IdeaService_SubmitIdea_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Idea)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdeaServiceServer).SubmitIdea(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IdeaService/SubmitIdea",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdeaServiceServer).SubmitIdea(ctx, req.(*Idea))
	}
	return interceptor(ctx, in, info, handler)
}

func _IdeaService_GetIdeas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdeaServiceServer).GetIdeas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IdeaService/GetIdeas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdeaServiceServer).GetIdeas(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _IdeaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.IdeaService",
	HandlerType: (*IdeaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitIdea",
			Handler:    _IdeaService_SubmitIdea_Handler,
		},
		{
			MethodName: "GetIdeas",
			Handler:    _IdeaService_GetIdeas_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ideas/ideas.protobuf",
}
